{
  "openapi": "3.0.0",
  "info": {
    "title": "API ECM",
    "version": "1.1.19"
  },
  "servers": [
    {
      "url": "https://test-ecm.sberins.ru"
    }
  ],
  "paths": {
    "/RefreshPresignUrl": {
      "post": {
        "tags": [
          "presign"
        ],
        "summary": "Обновить PUT presign-ссылки",
        "operationId": "refreshPresignUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRefreshPresignUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseContentRefreshPresignUrl"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc409"
                }
              }
            }
          },
          "460": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc500"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/CreateDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Создать документ",
        "description": "Cоздаёт соответствующий документ в ECM",
        "operationId": "createDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc409"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc400"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc500"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/СreateIdentityDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Создать документ удостоверяющий личность",
        "description": "Cоздаёт соответствующий документ в ECM",
        "operationId": "createIdentityDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateIdentityDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateIdentityDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateIdentityDoc409"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateIdentDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateIdentDoc500"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateIdentDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorCreateIdent504"
                }
              }
            }
          }
        }
      }
    },
    "/SearchDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Найти документ",
        "description": "Находит соответсвующий документ(ы) в ECM. Метод не возвращает preSign метаданных, только параметры найденных документов.",
        "operationId": "searchDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestSearchDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSearchDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorSearchDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorSearchDoc500"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorSearchDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/GetDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Получить документ",
        "description": "Находит соответсвующий, уже существующий, документ в ECM.",
        "operationId": "getDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestGetDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc200"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc400"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc401"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc403"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc404"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc405"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc415"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc416"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc423"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorGetDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc500"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/GetIdentityDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Получить документ удостоверяющий личность",
        "description": "Находит соответсвующий, уже существующий, документ в ECM",
        "operationId": "getIdentityDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestGetIdentityDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetIdentityDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorGetIdentDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorGetIdent503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorGetIdent504"
                }
              }
            }
          }
        }
      }
    },
    "/UpdateDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Изменить документ",
        "description": "Изменяет документ в ECM",
        "operationId": "updateDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUpdateDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateDoc409"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/UpdateIdentityDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Изменить документ удостоверяющий личность",
        "description": "Изменяет документ в ECM",
        "operationId": "updateIdentityDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateIdentityDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUpdateIdentityDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateIdentDoc409"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateIdentDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateIdentDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorUpdateIdentDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/DeleteDoc": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Удалить документ и связанные с ним файлы",
        "description": "Удаляет (архивирует) документ и его файлы. Физического удаления в ecm не происходит. Файлы документа переносятся в архивное хранилище.",
        "operationId": "deleteDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDeleteDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDeleteDoc"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteDoc426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteDoc503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteDoc504"
                }
              }
            }
          }
        }
      }
    },
    "/DeleteFile": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Удалить файлы документа",
        "description": "Удаляет (архивирует) файлыы указанного документа. Файлы документа переносятся в архивное хранилище.",
        "operationId": "deleteFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDeleteFile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Операция прошла успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDeleteFile"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteFile"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteFile"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteFile426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "501": {
            "description": "Ошибка в ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteFile503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorDeleteFile504"
                }
              }
            }
          }
        }
      }
    },
    "/NotificationUpload": {
      "post": {
        "tags": [
          "document"
        ],
        "summary": "Уведомления о загрузки файлов",
        "description": "Метод вызывается после загрузки файла в хранилище S3 для подтверждения успешной операции, либо для уведомления об ошибке загрузки",
        "operationId": "notificationUpload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNotificationUpload"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Ошибка в структуре запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload400"
                }
              }
            }
          },
          "401": {
            "description": "Ошибка авторизации в точках интеграции",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload401"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка проверки ролей доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload403"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый адрес не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload404"
                }
              }
            }
          },
          "405": {
            "description": "Метод запроса не известен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload405"
                }
              }
            }
          },
          "409": {
            "description": "Ошибка проверки уникальности",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload409"
                }
              }
            }
          },
          "415": {
            "description": "Ошибка валидации расширений файлов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload415"
                }
              }
            }
          },
          "416": {
            "description": "Отсутствует обязательное значение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload416"
                }
              }
            }
          },
          "423": {
            "description": "Документ заблокирован",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload423"
                }
              }
            }
          },
          "426": {
            "description": "Требуется обновление JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorNotificationUpload426"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка выполнения модуля",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload500"
                }
              }
            }
          },
          "501": {
            "description": "Ошибка в ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload501"
                }
              }
            }
          },
          "503": {
            "description": "Ошибка подключения к S3",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload503"
                }
              }
            }
          },
          "504": {
            "description": "Ошибка подключения к ECM",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNotificationUpload504"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PerecoderRequestMemberTypes": {
        "title": "Преобразование через перекодер / Тип участника",
        "description": "Запрос через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "MemeberTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "individual"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderRequestRoleTypes": {
        "title": "Преобразование через перекодер / Роль участника",
        "description": "Запрос через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "RoleTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "sys_name"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderRequestDocTypes": {
        "title": "Преоборазование через Перекодер / Тип документа",
        "description": "Запрос через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "DocTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "contract_osago"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderResponseDocTypes": {
        "title": "Преоборазование через Перекодер / Тип документа",
        "description": "Запрос через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "DocTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "contract_osago"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderRequestFileTypes": {
        "title": "Преобразование через Перекодер / Тип файла",
        "description": "Запрос через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "FileTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "passport_rf"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderResponseFileTypes": {
        "title": "Преобразование через Перекодер / Тип файла",
        "description": "Запрос через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "FileTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "passport_rf"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderRequestInsProd": {
        "title": "Преобразование через Перекодер / Страховой продукт",
        "description": "Запрос страхового продукта через perecoder",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "InsuranceProduct"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "EADOC"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "osago_insurance"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderResponse": {
        "title": "Ответ через perecoder",
        "description": "JSON Schema с типом данных Перекодера",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "RoleTypes"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "SPHERE"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "sys_name"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "PerecoderResponseInsProd": {
        "title": "Ответ через perecoder",
        "description": "Страховой продукт с типом данных Перекодера",
        "type": "object",
        "properties": {
          "dictName": {
            "description": "Имя справочника Перекодера",
            "type": "string",
            "example": "InsuranceProduct"
          },
          "dictValues": {
            "description": "Перечень значений справочника Перекодера",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dictValue": {
                  "description": "Значение справочника Перекодера",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "Группа справочников Перекодера",
                      "type": "string",
                      "example": "SPHERE"
                    },
                    "value": {
                      "description": "Значение в справочнике группы Перекодера",
                      "type": "string",
                      "example": "osago_insurance"
                    }
                  },
                  "required": [
                    "group",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "dictValue"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "dictName",
          "dictValues"
        ],
        "additionalProperties": false
      },
      "RequestNotificationUpload": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestPropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderNotificationUpload"
          },
          "payload": {
            "description": "Тело запроса для метода",
            "$ref": "#/components/schemas/RequestContentNotificationUpload"
          }
        }
      },
      "RequestHeaderNotificationUpload": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "NotificationUpload"
          }
        }
      },
      "RequestContentNotificationUpload": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "e1f05b10-5d3f-43da-8c56-1045a18d2672"
          },
          "doc_type": {
            "description": "Вид документа. При вызове метода NotificationUpload указывается либо doc_type или contract_type",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "contract_type": {
            "description": "Вид договора. При вызове метода NotificationUpload указывается либо doc_type или contract_type",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "notification_file": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Информация о загруженом или не загружном файле",
              "$ref": "#/components/schemas/NotificationFile"
            }
          }
        },
        "required": [
          "rquid",
          "id_ecm_doc",
          "doc_type",
          "contract_type",
          "jwt_token",
          "сollectionFilesUpload",
          "notification_file"
        ]
      },
      "RequestGeneratePreview": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestGeneratePreviewMessageHeader"
          },
          "payload": {
            "description": "Тело запроса для метода CreateDoc",
            "$ref": "#/components/schemas/RequestContentGeneratePreview"
          }
        }
      },
      "RequestContentGeneratePreview": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/CreateRequestFileMetadata"
            }
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "file_metadata"
        ]
      },
      "CreateRequestFileMetadata": {
        "description": "Объект «Метаданные файла»",
        "type": "object",
        "properties": {
          "id_ecm_filemetadata": {
            "description": "Внутренний идентификатор метаданных файла в ECM",
            "type": "string",
            "maxLength": 36
          },
          "id_as_filemetadata": {
            "description": "ID метаданных файла",
            "type": "string",
            "maxLength": 36,
            "example": "dbf28ab1-9dc5-449a-b50d-57aa62030dda"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "file_name": {
            "description": "Имя файла",
            "type": "string",
            "maxLength": 36
          },
          "url_as": {
            "description": "URL ссылка AC",
            "type": "string",
            "maxLength": 256
          },
          "url_file": {
            "description": "URL ссылка S3",
            "type": "string",
            "maxLength": 256
          },
          "doc_size": {
            "description": "Размер файла в Кб",
            "type": "string",
            "maxLength": 30
          },
          "crc": {
            "description": "MD5-хеш файла в формате RFC 1864",
            "type": "string",
            "maxLength": 24
          }
        },
        "required": [
          "id_ecm_filemetadata",
          "id_as_filemetadata",
          "app_id",
          "file_name",
          "url_as",
          "doc_size"
        ]
      },
      "RequestGeneratePreviewMessageHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method",
          "content"
        ]
      },
      "ResponseGeneratePreview": {
        "description": "Сообщение об успешном удалении файла",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderDeleteFile"
          },
          "content": {
            "type": "string",
            "maxLength": 256,
            "description": "Тело запроса для метода DeleteFile. Пустое сообщение."
          }
        }
      },
      "RequestCreateDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderCreateDoc"
          },
          "payload": {
            "description": "Тело запроса для метода CreateDoc",
            "$ref": "#/components/schemas/RequestContentCreateDoc"
          }
        }
      },
      "RequestRefreshPresignUrl": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderCreateDoc"
          },
          "payload": {
            "description": "Тело запроса для метода RefreshPresignUrl",
            "$ref": "#/components/schemas/RequestContentRefreshPresignUrl"
          }
        }
      },
      "PresignUrlItem": {
        "type": "object",
        "properties": {
          "url": {
            "description": "Старый Presigned URL",
            "type": "string"
          },
          "properties": {
            "type": "object"
          }
        },
        "required": ["url"]
      },
      "RequestContentRefreshPresignUrl": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "expired_links": {
            "type": "array",
            "minLength": 1,
            "items": {
              "$ref": "#/components/schemas/PresignUrlItem"
            }
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "expired_links"
        ]
      },
      "ResponseContentRefreshPresignUrl": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 200
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256
          },
          "links": {
            "type": "array",
            "minLength": 1,
            "items": {
              "$ref": "#/components/schemas/PresignUrlItem"
            }
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "links"
        ]
      },
      "RequestMessageProperties": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "routing_key": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "maxLength": 50,
            "example": "doc.eadoc.v1.rq"
          },
          "delivery_mode": {
            "description": "Модель доставки сообщения.  «1» - не сохранятеся на диске, «2» - сохраняется",
            "type": "string",
            "maxLength": 1,
            "example": 1
          },
          "content-type": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "default": "application/json",
            "maxLength": 250
          },
          "message_id": {
            "description": "ID интеграционного сообщения",
            "type": "string",
            "maxLength": 40,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "correlation_id": {
            "description": "ID сообщения, на которое сформирован данный ответ",
            "type": "string",
            "maxLength": 40,
            "example": null
          },
          "reply_to": {
            "description": "Наименование очереди ответов, в которой ожидается ответ ",
            "type": "string",
            "maxLength": 40,
            "example": "doc.sphere.v1.rs"
          },
          "app_id": {
            "description": "Код модуля системы (ИС), отправляющей сообщение",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "timestamp": {
            "description": "Время отправки сообщения. Указывается в секундах, прошедшеих с момента даты 1/1/1970+00:00.",
            "type": "string",
            "maxLength": 22,
            "example": 1676643395
          }
        },
        "required": [
          "routing_key",
          "delivery_mode",
          "content-type",
          "message_id",
          "reply_to",
          "type",
          "app_id",
          "timestamp"
        ]
      },
      "RequestPropertiesNotificationUpload": {
        "description": "Метаданные запроса для NotificationUpload",
        "type": "object",
        "properties": {
          "routing_key": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "maxLength": 50,
            "example": "doc.eadoc.v1.rs"
          },
          "delivery_mode": {
            "description": "Модель доставки сообщения.  «1» - не сохранятеся на диске, «2» - сохраняется",
            "type": "string",
            "maxLength": 1,
            "example": 1
          },
          "content-type": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "default": "application/json",
            "maxLength": 250
          },
          "message_id": {
            "description": "ID интеграционного сообщения",
            "type": "string",
            "maxLength": 40,
            "example": "bb49ff9e-9b4e-4702-9440-9fd1aab12ea0"
          },
          "reply_to": {
            "description": "Наименование очереди ответов, в которой ожидается ответ ",
            "type": "string",
            "maxLength": 40,
            "example": "doc.spher.v1.rq"
          },
          "app_id": {
            "description": "Код модуля системы (ИС), отправляющей сообщение",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "timestamp": {
            "description": "Время отправки сообщения. Указывается в секундах, прошедшеих с момента даты 1/1/1970+00:00.",
            "type": "string",
            "maxLength": 22,
            "example": 1676643395497
          },
          "correlation_id": {
            "description": "ID запроса CreateDoc",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          }
        },
        "required": [
          "routing_key",
          "delivery_mode",
          "content-type",
          "message_id",
          "reply_to",
          "app_id",
          "timestamp",
          "correlation_id"
        ]
      },
      "RequestHeaderCreateDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "CreateDoc"
          },
          "timestamp": {
            "description": "Время отравки сообщения. Формат по ISO 8601 - yyyy-MM-dd'T'HH:mm:ss+03:00. Пример 2023-01-13T10:07:57+03:00.",
            "type": "string",
            "maxLength": 20,
            "example": 1676643405494
          }
        },
        "required": [
          "version_api",
          "method",
          "content",
          "timestamp"
        ]
      },
      "RequestHeaderRefreshPresignUrl": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "RefreshPresignUrl"
          },
          "timestamp": {
            "description": "Время отравки сообщения. Формат по ISO 8601 - yyyy-MM-dd'T'HH:mm:ss+03:00. Пример 2023-01-13T10:07:57+03:00.",
            "type": "string",
            "maxLength": 20,
            "example": 1676643405494
          }
        },
        "required": [
          "version_api",
          "method",
          "content",
          "timestamp"
        ]
      },
      "RequestContentCreateDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "id_as_doc": {
            "description": "ID в AC",
            "type": "string",
            "maxLength": 36,
            "example": "b0432639-824a-4c09-9639-bbd04deb5131"
          },
          "doc_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "doc_number": {
            "description": "Номер документа",
            "type": "string",
            "maxLength": 30,
            "example": 780460
          },
          "doc_full_number": {
            "description": "Полный номер документа",
            "type": "string",
            "maxLength": 60
          },
          "contract_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30
          },
          "contract_number": {
            "description": "Номер договора",
            "type": "string",
            "maxLength": 30,
            "example": "2023-785256"
          },
          "contract_full_number": {
            "description": "Полный номер договороа",
            "type": "string",
            "maxLength": 60,
            "example": "2023-785256"
          },
          "doc_date": {
            "description": "Дата документа. UTC+3",
            "type": "string",
            "format": "date-time"
          },
          "contract_date": {
            "description": "Дата договора. Договора может не быть. UTC+3",
            "type": "string",
            "format": "date-time"
          },
          "contract_start_date": {
            "description": "Дата начала действия. Договора может не быть. UTC+3",
            "type": "string",
            "format": "date-time"
          },
          "contract_end_date": {
            "description": "Дата окончания действия. Договора может не быть. UTC+3",
            "type": "string",
            "format": "date-time"
          },
          "doc_type": {
            "description": "Вид документа",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "contract_type": {
            "description": "Вид договора. Договора может не быть",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "doc_name": {
            "description": "Тема/Предмет документа",
            "type": "string",
            "maxLength": 256
          },
          "deal": {
            "description": "Дело. В соответствии с номенклатурой",
            "type": "string",
            "maxLength": 256
          },
          "creator": {
            "description": "Создатель",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "status": {
            "description": "Статус документа",
            "type": "string",
            "maxLength": 100
          },
          "parent_doc": {
            "description": "Родительский документ (документ-основание). Заполняется при наличии родит. документа",
            "$ref": "#/components/schemas/ParentDoc"
          },
          "doc_parties": {
            "description": "Участники документа/договора",
            "type": "array",
            "items": {
              "type": "object",
              "description": "Участники документа/договора",
              "$ref": "#/components/schemas/DocParty"
            }
          },
          "insurance_product": {
            "description": "Страховой продукт.",
            "$ref": "#/components/schemas/PerecoderRequestInsProd"
          },
          "income_number": {
            "description": "Вх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 40
          },
          "income_date": {
            "description": "От (вх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "outcome_number": {
            "description": "Исх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 40
          },
          "outcome_date": {
            "description": "От (исх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "medical_doc": {
            "type": "boolean"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadata"
            }
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к документу"
          },
          "currency_num": {
            "type": "integer",
            "description": "ISO номер валюты"
          },
          "sum": {
            "type": "number",
            "description": "Сумма договора в валюте"
          },
          "payment_purpose": {
            "type": "string",
            "description": "Цель платежа"
          },
          "damage_dks": {
            "type": "boolean",
            "description": "Убыток ДКС (для Сферы)"
          },
          "flow": {
            "type": "string",
            "description": "Код потока документов",
            "enum": [
              "in",
              "out",
              "internal"
            ]
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "id_as_doc",
          "doc_full_number",
          "doc_number",
          "doc_date",
          "doc_type",
          "creator",
          "status",
          "file_metadata"
        ]
      },
      "ResponseCreateDoc": {
        "description": "Сообщение об успешном создании документа в ECM",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderCreateDoc"
          },
          "payload": {
            "description": "Тело ответа для метода CreateDoc",
            "$ref": "#/components/schemas/ResponseContentCreateDoc"
          }
        }
      },
      "ResponseRefreshPresignUrl": {
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderRefreshPresignUrl"
          },
          "payload": {
            "description": "Тело ответа для метода CreateDoc",
            "$ref": "#/components/schemas/ResponseContentRefreshPresignUrl"
          }
        }
      },
      "ResponseMessageProperties": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "routing_key": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "maxLength": 50,
            "example": "doc.sphere.v1.rs"
          },
          "delivery_mode": {
            "description": "Модель доставки сообщения.  «1» - не сохранятеся на диске, «2» - сохраняется",
            "type": "string",
            "maxLength": 1,
            "example": 1
          },
          "content-type": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "default": "application/json",
            "maxLength": 250
          },
          "message_id": {
            "description": "ID интеграционного сообщения",
            "type": "string",
            "maxLength": 40,
            "example": "53f293d4-041f-4745-b098-d0e267c38860"
          },
          "correlation_id": {
            "description": "ID сообщения, на которое сформирован данный ответ",
            "type": "string",
            "maxLength": 40,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "reply_to": {
            "description": "Наименование очереди ответов, в которой ожидается ответ ",
            "type": "string",
            "maxLength": 40,
            "example": "doc.eadoc.v1.rq"
          },
          "app_id": {
            "description": "Код модуля системы (ИС), отправляющей сообщение",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "timestamp": {
            "description": "Дата и время генерации отправляемого сообщения в системе-отправителе",
            "type": "string",
            "maxLength": 22,
            "example": 1676643395497
          }
        },
        "required": [
          "routing_key",
          "delivery_mode",
          "content-type",
          "message_id",
          "correlation_id",
          "reply_to",
          "type",
          "app_id",
          "timestamp"
        ]
      },
      "ResponseHeaderCreateDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "CreateDoc"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentCreateDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 200
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "5f63c87f-74ae-4d87-a021-84008b74a83d"
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "b0432639-824a-4c09-9639-bbd04deb5131"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/ResponseFileMetadata"
            }
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message",
          "app_id",
          "id_ecm_doc",
          "id_as_doc",
          "file_metadata"
        ]
      },
      "RequestCreateIdentityDoc": {
        "description": "Метаданные запроса createIdentityDoc",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderCreateIdentityDoc"
          },
          "payload": {
            "description": "Тело запроса для метода CreateIdenityDoc",
            "$ref": "#/components/schemas/RequestContentCreateIdentityDoc"
          }
        }
      },
      "RequestHeaderCreateIdentityDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "RequestContentCreateIdentityDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id  передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "parent_doc": {
            "description": "Родительский документ (документ-основание)",
            "$ref": "#/components/schemas/ParentDoc"
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "29efd47b-f4a9-4e14-be74-a5b00cbcb82e"
          },
          "code_identitydoc": {
            "description": "Код из классификатора приложения к приказу Приказ ФНС России от 14.11.2017 N ММВ-7-21/897",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "series": {
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "number": {
            "type": "string",
            "maxLength": 30,
            "example": 620487
          },
          "full_number": {
            "type": "string",
            "maxLength": 60
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "example": "2002-07-21T00:00:00.000+03:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "fio": {
            "description": "ФИО получателя, разделитель \"пробел\"",
            "type": "string",
            "maxLength": 100,
            "example": "Семенов Павел Сергеевич"
          },
          "issued": {
            "type": "string",
            "maxLength": 36,
            "example": "Выдан ГУ МВД по г. Москве, 2002.07.21"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadata"
            }
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "code_identitydoc",
          "number",
          "issue_date",
          "file_metadata"
        ]
      },
      "ResponseCreateIdentityDoc": {
        "description": "Сообщение об успешном создании документа в ECM",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderCreateIdentityDoc"
          },
          "payload": {
            "description": "Тело ответа для метода CreateIdentityDoc",
            "$ref": "#/components/schemas/ResponseContentCreateIdentityDoc"
          }
        }
      },
      "ResponseHeaderCreateIdentityDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "<Наименование метода>"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentCreateIdentityDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "type": "string",
            "maxLength": 3
          },
          "response_message": {
            "type": "string",
            "maxLength": 256
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов"
            },
            "$ref": "#/components/schemas/ResponseFileMetadata"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message",
          "id_ecm_doc",
          "id_as_doc"
        ]
      },
      "ResponseErrorCreateIdentityDoc409": {
        "description": "Ошибка проверки уникальности документа",
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "$ref": "#/components/schemas/ResponseHeaderCreateIdentityDoc"
          },
          "payload": {
            "$ref": "#/components/schemas/RespErrorContent409"
          }
        }
      },
      "RequestSearchDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestSearchDocMessageHeader"
          },
          "payload": {
            "description": "Тело запроса для метода SearchDoc",
            "$ref": "#/components/schemas/requestContentSearchDoc"
          }
        }
      },
      "RequestSearchDocMessageHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "requestContentSearchDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "create_date_from": {
            "description": "Дата создания с",
            "type": "string",
            "format": "date-time",
            "example": "0000.01.01T00:00:00:000Z  если пустое значение"
          },
          "create_date_to": {
            "description": "Дата создания по  \"0000.01.01T00:00:00:000Z\"",
            "type": "string",
            "format": "date-time"
          },
          "update_date_from": {
            "description": "Дата изменеия с",
            "type": "string",
            "format": "date-time"
          },
          "update_date_to": {
            "description": "Дата изменеия по",
            "type": "string",
            "format": "date-time"
          },
          "doc_series": {
            "description": "Серия документа. Обязателен, если указан \"Вид документа\" и документ имеет серию",
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "doc_number": {
            "description": "Номер документа. Обязателен, если указан \"Вид документа\"",
            "type": "string",
            "maxLength": 30,
            "example": 780460
          },
          "doc_full_number": {
            "description": "Полный номер документа. Обязателен, если указан \"Вид документа\"",
            "type": "string",
            "maxLength": 60
          },
          "contract_series": {
            "description": "Серия документа. Обязателен, если указан \"Вид договора\" и документ имеет серию",
            "type": "string",
            "maxLength": 30
          },
          "contract_number": {
            "description": "Номер договора. Обязателен, если указан \"Вид договора\"",
            "type": "string",
            "maxLength": 30
          },
          "contract_full_number": {
            "description": "Полный номер договороа. Обязателен, если указан \"Вид договора\"",
            "type": "string",
            "maxLength": 60
          },
          "doc_date_from": {
            "description": "Дата документа \"c\"",
            "type": "string",
            "format": "date-time"
          },
          "doc_date_to": {
            "description": "Дата документа \"до\"",
            "type": "string",
            "format": "date-time"
          },
          "contract_date_from": {
            "description": "Дата договора \"c\"",
            "type": "string",
            "format": "date-time"
          },
          "contract_date_to": {
            "description": "Дата начала действия \"до\"",
            "type": "string",
            "format": "date-time"
          },
          "contract_start_date_from": {
            "description": "Дата начала действия «с». Договора может не быть.",
            "type": "string",
            "format": "date-time"
          },
          "contract_start_date_to": {
            "description": "Дата начала действия «с». Договора может не быть.",
            "type": "string",
            "format": "date-time"
          },
          "contract_end_date_from": {
            "description": "Дата окончания действия «с». Договора может не быть.",
            "type": "string",
            "format": "date-time"
          },
          "contract_end_date_to": {
            "description": "Дата окончания действия «по». Договора может не быть.",
            "type": "string",
            "format": "date-time"
          },
          "doc_type": {
            "description": "Вид документа. При вызове метода SearchDoc указывается либо doc_type или contract_type",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "contract_type": {
            "description": "Вид договора. При вызове метода SearchDoc указывается либо doc_type или contract_type",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          }
        },
        "required": [
          "rquid",
          "doc_full_number",
          "jwt_token"
        ]
      },
      "ResponseSearchDoc": {
        "description": "Сообщение об успешном поиске документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderSearchDoc"
          },
          "payload": {
            "description": "Тело запроса для метода SearchDoc",
            "$ref": "#/components/schemas/ResponseContentSearchDoc"
          }
        }
      },
      "ResponseHeaderSearchDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "SearchDoc"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentSearchDoc": {
        "description": "Content о найденном документет",
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id  (см. \"property\")передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "53f293d4-041f-4745-b098-d0e267c38860"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 200
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/ResponseContentDocumentsSearchDoc"
            }
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message",
          "documents"
        ]
      },
      "ResponseContentDocumentsSearchDoc": {
        "type": "object",
        "properties": {
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "dff62f6f-d7d0-4149-8d4d-b09b4126aefb"
          },
          "id_as_doc": {
            "description": "ID в АС. Для изменения уже существующего документа необходимо передать",
            "type": "string",
            "maxLength": 36,
            "example": "2aaa82a9-6bbb-4e96-80b3-2624cb8472a4"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "doc_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "doc_number": {
            "description": "Номер документа",
            "type": "string",
            "maxLength": 30,
            "example": 780460
          },
          "doc_full_number": {
            "description": "Полный номер документа",
            "type": "string",
            "maxLength": 60
          },
          "contract_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30
          },
          "contract_number": {
            "description": "Номер договора",
            "type": "string",
            "maxLength": 30
          },
          "contract_full_number": {
            "description": "Полный номер договороа",
            "type": "string",
            "maxLength": 60
          },
          "doc_date": {
            "description": "Дата документа",
            "type": "string",
            "format": "date-time"
          },
          "contract_date": {
            "description": "Дата договора",
            "type": "string",
            "format": "date-time"
          },
          "contract_start_date": {
            "description": "Дата начала действия",
            "type": "string",
            "format": "date-time"
          },
          "contract_end_date": {
            "description": "Дата окончания действия",
            "type": "string",
            "format": "date-time"
          },
          "doc_type": {
            "description": "Вид документа",
            "$ref": "#/components/schemas/PerecoderResponse"
          },
          "contract_type": {
            "description": "Вид договора",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "doc_name": {
            "description": "Тема/Предмет документа",
            "type": "string",
            "maxLength": 256
          },
          "deal": {
            "description": "Дело. В соответствии с номенклатурой",
            "type": "string",
            "maxLength": 256
          },
          "creator": {
            "description": "Создатель",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "editor": {
            "description": "Редактор документа",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "status": {
            "description": "Статус",
            "type": "string",
            "maxLength": 100
          },
          "parent_doc": {
            "description": "Родительский документ (документ-основание)",
            "$ref": "#/components/schemas/ResponseContentSearchDoc"
          },
          "doc_parties": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Участники документа",
              "$ref": "#/components/schemas/DocPartyResponse"
            }
          },
          "insurance_product": {
            "description": "Страховой продукт.",
            "$ref": "#/components/schemas/PerecoderResponseInsProd"
          },
          "income_number": {
            "description": "Вх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 40
          },
          "income_date": {
            "description": "От (вх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "outcome_number": {
            "description": "Исх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 30
          },
          "outcome_date": {
            "description": "От (исх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "medical_doc": {
            "type": "boolean"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/ResponseFileMetadata"
            }
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к документу"
          },
          "currency_num": {
            "type": "integer",
            "description": "ISO номер валюты"
          },
          "sum": {
            "type": "number",
            "description": "Сумма договора в валюте"
          },
          "payment_purpose": {
            "type": "string",
            "description": "Цель платежа"
          },
          "damage_dks": {
            "type": "boolean",
            "description": "Убыток ДКС (для Сферы)"
          },
          "flow": {
            "type": "string",
            "description": "Код потока документов",
            "enum": [
              "in",
              "out",
              "internal"
            ]
          }
        }
      },
      "RequestGetDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestMessageHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/requestContentGetDoc"
          }
        }
      },
      "RequestMessageHeaderGetDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "GetDoc"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "requestContentGetDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "fef9df9c-6f25-4877-8b61-e03dd23e8214"
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36,
            "example": null
          },
          "doc_type": {
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "list_flmd": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 36
            }
          },
          "hide_archived": {
            "type": "boolean",
            "default": false,
            "description": "Выключить выдачу заархивированных файлов системе, изменяет поведения поля file_metadata"
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "id_ecm_doc",
          "doc_type"
        ]
      },
      "ResponseGetDoc200": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc200"
          }
        }
      },
      "ResponseGetDoc400": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc400"
          }
        }
      },
      "ResponseGetDoc401": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc401"
          }
        }
      },
      "ResponseGetDoc403": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc403"
          }
        }
      },
      "ResponseGetDoc404": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc404"
          }
        }
      },
      "ResponseGetDoc405": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc405"
          }
        }
      },
      "ResponseGetDoc409": {
        "description": "Ошибка проверки уникальности",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc409"
          }
        }
      },
      "ResponseGetDoc415": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc415"
          }
        }
      },
      "ResponseGetDoc416": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc416"
          }
        }
      },
      "ResponseGetDoc423": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc423"
          }
        }
      },
      "ResponseGetDoc500": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc500"
          }
        }
      },
      "ResponseGetDoc501": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc501"
          }
        }
      },
      "ResponseGetDoc503": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc503"
          }
        }
      },
      "ResponseGetDoc504": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderGetDoc"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/ResponseContentGetDoc504"
          }
        }
      },
      "ResponseHeaderGetDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "GetDoc"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "RequestGetIdentityDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestGetIdentityDocMessageHeader"
          },
          "payload": {
            "description": "Тело запроса для метода GetDoc",
            "$ref": "#/components/schemas/requestContentGetIdentityDoc"
          }
        }
      },
      "RequestGetIdentityDocMessageHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "requestContentGetIdentityDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "code_identitydoc": {
            "description": "Код из классификатора приложения к приказу Приказ ФНС России от 14.11.2017 N ММВ-7-21/897",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "series": {
            "type": "string",
            "maxLength": 30
          },
          "number": {
            "type": "string",
            "maxLength": 30
          },
          "full_number": {
            "type": "string",
            "maxLength": 30
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "id_ecm_doc",
          "id_as_doc",
          "code",
          "series",
          "number"
        ]
      },
      "ResponseGetIdentityDoc": {
        "description": "Сообщение об успешном получении документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseMessageGetIdentityDocHeader"
          },
          "payload": {
            "description": "Тело запроса для метода CreateIdentityDoc",
            "$ref": "#/components/schemas/responseContentGetIdentityDoc"
          }
        }
      },
      "ResponseMessageGetIdentityDocHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "responseContentGetIdentityDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id  передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "type": "string",
            "maxLength": 3
          },
          "response_message": {
            "type": "string",
            "maxLength": 256
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "code_identitydoc": {
            "description": "Код из классификатора приложения к приказу Приказ ФНС России от 14.11.2017 N ММВ-7-21/897",
            "$ref": "#/components/schemas/PerecoderResponse"
          },
          "series": {
            "type": "string",
            "maxLength": 30
          },
          "number": {
            "type": "string",
            "maxLength": 30
          },
          "full_number": {
            "type": "string",
            "maxLength": 60
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "fio": {
            "description": "ФИО получателя, разделитель \"пробел\"",
            "type": "string",
            "maxLength": 100
          },
          "issued": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/ResponseFileMetadata"
            }
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "RequestUpdateDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderUpdateDoc"
          },
          "payload": {
            "description": "Тело запроса для метода UpdateDoc",
            "$ref": "#/components/schemas/RequestContentUpdateDoc"
          }
        }
      },
      "RequestHeaderUpdateDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "UpdateDoc"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "RequestContentUpdateDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id  (см. \"property\")передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "parent_doc": {
            "description": "Родительский документ (документ-основание)",
            "$ref": "#/components/schemas/ParentDoc"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "editor": {
            "description": "Редактор документа",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "1a06f051-540d-42fb-a684-6a2159cd20e2"
          },
          "id_as_doc": {
            "description": "ID в АС. Для изменения уже существующего документа необходимо передать",
            "type": "string",
            "maxLength": 36,
            "example": null
          },
          "doc_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "doc_number": {
            "description": "Номер документа",
            "type": "string",
            "maxLength": 30,
            "example": 780460
          },
          "doc_full_number": {
            "description": "Полный номер документа",
            "type": "string",
            "maxLength": 60
          },
          "contract_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30
          },
          "contract_number": {
            "description": "Номер договора",
            "type": "string",
            "maxLength": 30
          },
          "contract_full_number": {
            "description": "Полный номер договороа",
            "type": "string",
            "maxLength": 60
          },
          "doc_date": {
            "description": "Дата документа",
            "type": "string",
            "format": "date-time"
          },
          "contract_date": {
            "description": "Дата договора",
            "type": "string",
            "format": "date-time"
          },
          "contract_start_date": {
            "description": "Дата начала действия",
            "type": "string",
            "format": "date-time"
          },
          "contract_end_date": {
            "description": "Дата окончания действия",
            "type": "string",
            "format": "date-time"
          },
          "doc_type": {
            "description": "Вид документа",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "contract_type": {
            "description": "Вид договора",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "doc_name": {
            "description": "Тема/Предмет документа",
            "type": "string",
            "maxLength": 256
          },
          "deal": {
            "description": "Дело. В соответствии с номенклатурой",
            "type": "string",
            "maxLength": 256
          },
          "status": {
            "description": "Статус",
            "type": "string",
            "maxLength": 100
          },
          "doc_parties": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Участники документа",
              "$ref": "#/components/schemas/DocParty"
            }
          },
          "insurance_product": {
            "description": "Страховой продукт.",
            "$ref": "#/components/schemas/PerecoderRequestInsProd"
          },
          "income_number": {
            "description": "Вх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 40
          },
          "income_date": {
            "description": "От (вх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "outcome_number": {
            "description": "Исх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 30
          },
          "outcome_date": {
            "description": "От (исх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "medical_doc": {
            "type": "boolean"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadata"
            }
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к документу"
          },
          "currency_num": {
            "type": "integer",
            "description": "ISO номер валюты"
          },
          "sum": {
            "type": "number",
            "description": "Сумма договора в валюте"
          },
          "payment_purpose": {
            "type": "string",
            "description": "Цель платежа"
          },
          "damage_dks": {
            "type": "boolean",
            "description": "Убыток ДКС (для Сферы)"
          },
          "flow": {
            "type": "string",
            "description": "Код потока документов",
            "enum": [
              "in",
              "out",
              "internal"
            ]
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "id_ecm_doc",
          "id_as",
          "doc_full_number",
          "doc_type",
          "editor"
        ]
      },
      "ResponseContentGetDoc400": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 400
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Отсутвует id_ecm_doc"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc401": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 401
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка авторизации"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc403": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 403
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Не удалось определить роль доступа"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc404": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 404
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Запрашиваемый адрес не доступен"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc405": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 405
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Вызываемый метод неизвестен"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc409": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 409
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка проверки уникальности"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc415": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 415
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка валидации расширений файлов"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc416": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 416
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Отсутствует обязательное значение...."
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc423": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 423
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Документ заблокирован"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc500": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 500
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Внутренняя ошибка модуля интеграции"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc501": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 501
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Внутренняя ошибка ECM"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc503": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 500
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка подключения к S3"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc504": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 500
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка подключения к ECM"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentGetDoc200": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id  (см. \"property\")передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256
          },
          "parent_doc": {
            "description": "Родительский документ (документ-основание)",
            "$ref": "#/components/schemas/ParentDoc"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "description": "ID в АС. Для изменения уже существующего документа необходимо передать",
            "type": "string",
            "maxLength": 36
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "doc_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "doc_number": {
            "description": "Номер документа",
            "type": "string",
            "maxLength": 30,
            "example": 780460
          },
          "doc_full_number": {
            "description": "Полный номер документа",
            "type": "string",
            "maxLength": 60
          },
          "contract_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30
          },
          "contract_number": {
            "description": "Номер договора",
            "type": "string",
            "maxLength": 30
          },
          "contract_full_number": {
            "description": "Полный номер договороа",
            "type": "string",
            "maxLength": 60
          },
          "doc_date": {
            "description": "Дата документа",
            "type": "string",
            "format": "date-time"
          },
          "contract_date": {
            "description": "Дата договора",
            "type": "string",
            "format": "date-time"
          },
          "contract_start_date": {
            "description": "Дата начала действия",
            "type": "string",
            "format": "date-time"
          },
          "contract_end_date": {
            "description": "Дата окончания действия",
            "type": "string",
            "format": "date-time"
          },
          "doc_type": {
            "description": "Вид документа",
            "$ref": "#/components/schemas/PerecoderResponseDocTypes"
          },
          "contract_type": {
            "description": "Вид договора",
            "$ref": "#/components/schemas/PerecoderResponseDocTypes"
          },
          "doc_name": {
            "description": "Тема/Предмет документа",
            "type": "string",
            "maxLength": 256
          },
          "deal": {
            "description": "Дело. В соответствии с номенклатурой",
            "type": "string",
            "maxLength": 256
          },
          "creator": {
            "description": "Создатель",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "editor": {
            "description": "Редактор документа",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "status": {
            "description": "Статус",
            "type": "string",
            "maxLength": 100
          },
          "doc_parties": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Участники документа",
              "$ref": "#/components/schemas/DocPartyResponse"
            }
          },
          "insurance_product": {
            "description": "Страховой продукт.",
            "$ref": "#/components/schemas/PerecoderResponseInsProd"
          },
          "income_number": {
            "description": "Вх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 40
          },
          "income_date": {
            "description": "От (вх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "outcome_number": {
            "description": "Исх. №. Для регистрации документов от других компаний. Заполняется для писем",
            "type": "string",
            "maxLength": 30
          },
          "outcome_date": {
            "description": "От (исх.). Дата регистрации документов от других компаний. Заполняется для писем.",
            "type": "string",
            "format": "date-time"
          },
          "medical_doc": {
            "type": "boolean"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/ResponseFileMetadata"
            }
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к документу"
          },
          "currency_num": {
            "type": "integer",
            "description": "ISO номер валюты"
          },
          "sum": {
            "type": "number",
            "description": "Сумма договора в валюте"
          },
          "payment_purpose": {
            "type": "string",
            "description": "Цель платежа"
          },
          "damage_dks": {
            "type": "boolean",
            "description": "Убыток ДКС (для Сферы)"
          },
          "flow": {
            "type": "string",
            "description": "Код потока документов",
            "enum": [
              "in",
              "out",
              "internal"
            ]
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message",
          "jwt_token",
          "id_ecm_doc",
          "id_as",
          "doc_full_number",
          "app_id",
          "doc_type",
          "editor"
        ]
      },
      "ResponseUpdateDoc": {
        "description": "Сообщение об успешном изменениии документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderUpdateDoc"
          },
          "payload": {
            "description": "Тело запроса для метода CreateDoc",
            "$ref": "#/components/schemas/ResponseContentCreateDoc"
          }
        }
      },
      "ResponseHeaderUpdateDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentUpdateDoc": {
        "description": "Метаданные файла на запрос updateDoc",
        "type": "object",
        "properties": {
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/ResponseFileMetadata"
            }
          }
        },
        "required": [
          "id_ecm_doc"
        ]
      },
      "RequestUpdateIdentityDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestUpdateIdentityDocMessageHeader"
          },
          "payload": {
            "description": "Тело запроса для метода UpdateDoc",
            "$ref": "#/components/schemas/RequestContentUpdateIdentityDoc"
          }
        }
      },
      "RequestUpdateIdentityDocMessageHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "RequestContentUpdateIdentityDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "parent_doc": {
            "description": "Родительский документ (документ-основание)",
            "$ref": "#/components/schemas/ParentDoc"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "editor": {
            "description": "Редактор документа",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "code_identitydoc": {
            "description": "Код из классификатора приложения к приказу Приказ ФНС России от 14.11.2017 N ММВ-7-21/897",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "series": {
            "type": "string",
            "maxLength": 30
          },
          "number": {
            "type": "string",
            "maxLength": 30
          },
          "full_number": {
            "type": "string",
            "maxLength": 60
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "fio": {
            "description": "ФИО получателя, разделитель \"пробел\"",
            "type": "string",
            "maxLength": 100
          },
          "issued": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadata"
            }
          }
        },
        "required": [
          "rquid",
          "editor",
          "jwt_token",
          "id_ecm_doc",
          "id_as_doc",
          "code",
          "type_doc",
          "number",
          "issue_date",
          "file_metadata"
        ]
      },
      "ResponseUpdateIdentityDoc": {
        "description": "Сообщение об успешном изменениии документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderUpdateIdentityDoc"
          },
          "payload": {
            "description": "Тело запроса для метода CreateDoc",
            "$ref": "#/components/schemas/ResponseContentCreateIdentityDoc"
          }
        }
      },
      "ResponseHeaderUpdateIdentityDoc": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentUpdateIdentityDoc": {
        "description": "Метаданные файла на запрос updateDoc",
        "type": "object",
        "properties": {
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/ResponseFileMetadata"
            }
          }
        },
        "required": [
          "id_ecm_doc"
        ]
      },
      "RequestDeleteDoc": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestDeleteDocMessageHeader"
          },
          "payload": {
            "description": "Тело запроса для метода DeleteDoc",
            "$ref": "#/components/schemas/RequestContentDeleteDoc"
          }
        }
      },
      "RequestDeleteDocMessageHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method",
          "content"
        ]
      },
      "RequestContentDeleteDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "editor": {
            "description": "Редактор документа",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "doc_type": {
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "editor",
          "id_ecm_doc",
          "id_as_doc",
          "doc_type"
        ]
      },
      "ResponseDeleteDoc": {
        "description": "Сообщение об успешном изменениии документа",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseMessageDeleteDocHeader"
          },
          "payload": {
            "description": "Тело ответа для метода DeleteDoc.",
            "$ref": "#/components/schemas/ResponseMessageContentDeleteDoc"
          }
        }
      },
      "ResponseMessageDeleteDocHeader": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseMessageContentDeleteDoc": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadataDelete"
            }
          },
          "response_code": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 3
          },
          "response_message": {
            "type": "string",
            "maxLength": 256
          }
        },
        "required": [
          "rquid",
          "id_ecm_doc",
          "id_as_doc",
          "response_code",
          "response_message"
        ]
      },
      "RequestDeleteFile": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/RequestMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/RequestHeaderDeleteFile"
          },
          "payload": {
            "description": "Тело запроса для метода DeleteFile",
            "$ref": "#/components/schemas/RequestContentDeleteFile"
          }
        }
      },
      "RequestHeaderDeleteFile": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "DeleteFile"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "RequestContentDeleteFile": {
        "type": "object",
        "properties": {
          "rquid": {
            "description": "должно быть равно значению служебного заголовка (или свойства) message_id передаваемого сообщения, т.е. представляет собой идентификатор самого интеграционного сообщения. Вычисляется и присваивается отправляющей системой в момент генерации  интеграционного сообщения.",
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "jwt_token": {
            "description": "token с ФОС",
            "$ref": "#/components/schemas/JwtToken"
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "c1c1ed62-e28a-4a05-812c-30d6425b368a"
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "editor": {
            "description": "Редактор документа",
            "$ref": "#/components/schemas/CreatorEditor"
          },
          "doc_type": {
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/DeleteFileMetadata"
            }
          }
        },
        "required": [
          "rquid",
          "jwt_token",
          "id_ecm_doc",
          "doc_type",
          "file_metadata",
          "editor"
        ]
      },
      "ResponseDeleteFile": {
        "description": "Сообщение об успешном удалении файла",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderDeleteFile"
          },
          "payload": {
            "description": "Тело ответа для метода DeleteFile.",
            "$ref": "#/components/schemas/ResponseContentDeleteFile"
          }
        }
      },
      "ResponseHeaderDeleteFile": {
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "description": "Наименование метода в API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "DeleteFile"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentDeleteFile": {
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 200
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256
          },
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36
          },
          "file_metadata": {
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadataDelete"
            }
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message",
          "id_ecm_filemetada",
          "id_as_doc"
        ]
      },
      "ResponseError": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeader"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent"
          }
        }
      },
      "ResponseErrorDeleteFile": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseHeaderDeleteFile"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent"
          }
        }
      },
      "ResponseErrorUpdateDoc409": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeader"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent409"
          }
        }
      },
      "ResponseErrorUpdateIdentDoc409": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeader"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent409"
          }
        }
      },
      "ResponseErrorCreateDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorCreateIdentDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorSearchDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderSearchDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorGetDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderGetDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorGetIdentDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderGetIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorUpdateDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderUpdateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorUpdateIdentDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderUpdateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorDeleteDoc426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderDeleteDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorDeleteFile426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderDeleteFile"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorNotificationUpload426": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderNotificationUpload"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent426"
          }
        }
      },
      "ResponseErrorCreateDoc400": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreate400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContentCreate400"
          }
        }
      },
      "ResponseErrorCreateDoc409": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreate400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContentCreate409"
          }
        }
      },
      "ResponseErrorCreateDoc500": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок ответа",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent500"
          }
        }
      },
      "ResponseErrorCreateIdentDoc500": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок ответа",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent500"
          }
        }
      },
      "ResponseErrorSearchDoc500": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок ответа",
            "$ref": "#/components/schemas/ResponseErrorHeaderSearchDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent500"
          }
        }
      },
      "ResponseErrorCreateDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorUpdateDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderUpdateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorGetDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderGetDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorDeleteDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderDeleteDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorDeleteFile503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderDeleteFile"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorSearchDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderSearchDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorCreateIdentDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorGetIdent503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderGetIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorGetIdent504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderGetIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorUpdateIdentDoc503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderUpdateIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent503"
          }
        }
      },
      "ResponseErrorCreateDoc504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorUpdateDoc504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderUpdateDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorGetDoc504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderGetDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorDeleteDoc504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderDeleteDoc504"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorDeleteFile504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderDeleteFile"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorSearchDoc504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderSearchDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorCreateIdent504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderCreateIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorUpdateIdentDoc504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства ответа",
            "$ref": "#/components/schemas/ResponseMessageProperties"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ResponseErrorHeaderUpdateIdentDoc"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseErrorContent504"
          }
        }
      },
      "ResponseErrorHeader": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "<Наименование метода>"
          }
        }
      },
      "ResponseErrorHeaderCreate400": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "CreateDoc"
          }
        }
      },
      "ResponseErrorHeaderCreateDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "CreateDoc"
          }
        }
      },
      "ResponseErrorHeaderCreateIdentDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "CreateIdentityDoc"
          }
        }
      },
      "ResponseErrorHeaderGetIdentDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "GetIdentityDoc"
          }
        }
      },
      "ResponseErrorHeaderUpdateIdentDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "UpdateIdentityDoc"
          }
        }
      },
      "ResponseErrorHeaderUpdateDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "UpdateDoc"
          }
        }
      },
      "ResponseErrorHeaderGetDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "GetDoc"
          }
        }
      },
      "ResponseErrorHeaderDeleteDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "DeleteDoc"
          }
        }
      },
      "ResponseErrorHeaderDeleteFile": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "DeleteFile"
          }
        }
      },
      "ResponseErrorHeaderSearchDoc": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "SearchDoc"
          }
        }
      },
      "ResponseErrorHeaderNotificationUpload": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "NotificationUpload"
          }
        }
      },
      "ResponseErrorHeaderGetDoc504": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "GetDoc"
          }
        }
      },
      "ResponseErrorHeaderDeleteDoc504": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "DeleteDocDoc"
          }
        }
      },
      "ResponseErrorHeaderDeleteFile504": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "DeleteFile"
          }
        }
      },
      "ResponseErrorHeaderSearch504": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "Search"
          }
        }
      },
      "ResponseErrorContent": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": "4ХХ"
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка ...."
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContentCreate400": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": "4ХХ"
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "............"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContentCreate409": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 409
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "............"
          },
          "id_ecm_doc": {
            "description": "ИД документа в ECM",
            "type": "string"
          },
          "id_as_doc": {
            "description": "ИД документа в АС",
            "type": "string"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContent409": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 409
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "............"
          },
          "id_ecm_doc": {
            "description": "ИД документа в ECM",
            "type": "string"
          },
          "id_as_doc": {
            "description": "ИД документа в АС",
            "type": "string"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContent426": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 426
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "JWT устарел. Требуется обновление"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContent500": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 503
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Внутренняя ошибка модуля"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContent503": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 503
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Нет подключения к хранилищу S3"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseErrorContent504": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 504
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Нет подключения к ECM"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_messag"
        ]
      },
      "RespErrorContent409": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 409
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "............"
          },
          "id_ecm_doc": {
            "description": "ИД документа в ECM",
            "type": "string"
          },
          "id_as_doc": {
            "description": "ИД документа в АС",
            "type": "string"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "DocType": {
        "description": "Объект «Вид документа» ",
        "type": "object",
        "properties": {
          "type_sys_name": {
            "description": "Системное имя вида",
            "type": "string",
            "maxLength": 30,
            "example": "loss_request"
          },
          "type_bus_name": {
            "description": "Бизнес-имя вида",
            "type": "string",
            "maxLength": 60,
            "example": "Обращение по убытку"
          }
        },
        "required": [
          "type_sys_name",
          "type_bus_name"
        ]
      },
      "ContractType": {
        "description": "Объект «Вид договора» ",
        "type": "object",
        "properties": {
          "type_sys_name": {
            "description": "Системное имя вида",
            "type": "string",
            "maxLength": 30,
            "example": "contract_ins"
          },
          "type_bus_name": {
            "description": "Бизнес-имя вида",
            "type": "string",
            "maxLength": 60,
            "example": "Договор страхования"
          }
        },
        "required": [
          "type_sys_name",
          "type_bus_name"
        ]
      },
      "DocFlow": {
        "description": "Объект «Документопоток»",
        "type": "object",
        "properties": {
          "doc_flow_id": {
            "description": "ID документопотока",
            "type": "string",
            "maxLength": 36
          },
          "doc_flow_sys_name": {
            "description": "Системное имя документопотока",
            "type": "string",
            "maxLength": 30
          },
          "doc_flow_bus_name": {
            "description": "Бизнес-имя документопотока",
            "type": "string",
            "maxLength": 60
          },
          "par_doc_flow_id": {
            "description": "ID родительского документопотока",
            "type": "string",
            "maxLength": 36
          },
          "par_doc_flow_sys_name": {
            "description": "Системное имя родительского документопотока",
            "type": "string",
            "maxLength": 30
          },
          "par_doc_flow_bus_name": {
            "description": "Бизнес-имя родительского документопотока",
            "type": "string",
            "maxLength": 60
          }
        },
        "required": [
          "doc_flow_id",
          "doc_flow_sys_name",
          "doc_flow_bus_name"
        ]
      },
      "CreatorEditor": {
        "description": "Автор/редактор документа",
        "type": "object",
        "properties": {
          "id_ecm_creator": {
            "description": "внутренний id автора в ecm. Если нет, то пустое значение (\"\")",
            "type": "string",
            "maxLength": 36,
            "example": "0bf60ef3-5f4b-4288-9f4e-4e3de09b6862"
          },
          "id_as_creator": {
            "description": "Id автора/редатора",
            "type": "string",
            "maxLength": 36,
            "example": "bbf9110f-5817-4a27-bfc2-77e343f6a45c"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "staff_number": {
            "description": "Табельный номер. Заполняется при наличии",
            "type": "string",
            "maxLength": 30,
            "example": 2886
          },
          "fullname": {
            "description": "Полное имя",
            "type": "string",
            "maxLength": 50,
            "example": "Сергеев Андрей Петрович"
          },
          "email": {
            "type": "string",
            "maxLength": 256,
            "example": "Sergeev.Andrey@corp-ins.ru"
          }
        },
        "required": [
          "id_ecm_creator",
          "id_as_creator",
          "fullname",
          "app_id",
          "role"
        ]
      },
      "DocParty": {
        "description": "Объект «Участники документа»",
        "type": "object",
        "properties": {
          "id_ecm_party": {
            "type": "string",
            "maxLength": 36,
            "example": null
          },
          "id_as_party": {
            "type": "string",
            "maxLength": 36,
            "example": "f8e56774-3f7c-48ad-8886-4773d22d7761"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "type": {
            "description": "Тип участника",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestMemberTypes"
          },
          "role": {
            "description": "Роль участника",
            "type": "object",
            "items": null,
            "$ref": "#/components/schemas/PerecoderRequestRoleTypes"
          },
          "opf": {
            "description": "Классификатор ОПФ. Код в виде xxxxx. Должны использоваться только цифры.",
            "type": "string",
            "maxLength": 10
          },
          "shortname": {
            "description": "Краткое имя",
            "type": "string",
            "maxLength": 50
          },
          "fullname": {
            "description": "Полное имя",
            "type": "string",
            "maxLength": 100
          },
          "fio": {
            "description": "ФИО участника, разделитель \"пробел\"",
            "type": "string",
            "maxLength": 100
          },
          "birthdate": {
            "description": "Дата рождения",
            "type": "string",
            "format": "date-time"
          },
          "INN": {
            "description": "ИНН",
            "type": "string",
            "maxLength": 12
          },
          "email": {
            "description": "email",
            "type": "string",
            "maxLength": 100
          },
          "VIP": {
            "description": "Тип VIP",
            "type": "string",
            "maxLength": 20
          },
          "identity_doc": {
            "description": "ДУЛ строка",
            "type": "string",
            "maxLength": 512
          },
          "identity_doc_obj": {
            "description": "Объект с данными ДУЛ",
            "$ref": "#/components/schemas/IdentityDoc",
            "deprecated": true
          },
          "identity_doc_id": {
            "description": "ECM ID объекта ДУЛ",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id_ecm_party",
          "type",
          "role",
          "INN",
          "shortname"
        ]
      },
      "DocPartyResponse": {
        "description": "Объект «Участники документа»",
        "type": "object",
        "properties": {
          "id_ecm_party": {
            "type": "string",
            "maxLength": 36,
            "example": "1ef600db-56d6-454b-a75f-d72d15680b5a"
          },
          "id_as_party": {
            "type": "string",
            "maxLength": 36,
            "example": "f8e56774-3f7c-48ad-8886-4773d22d7761"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "type": {
            "description": "Тип участника",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestMemberTypes"
          },
          "role": {
            "description": "Роль участника",
            "type": "object",
            "items": null,
            "$ref": "#/components/schemas/PerecoderRequestRoleTypes"
          },
          "opf": {
            "description": "Классификатор ОПФ. Код в виде xxxxx. Должны использоваться только цифры.",
            "type": "string",
            "maxLength": 10
          },
          "shortname": {
            "description": "Краткое имя",
            "type": "string",
            "maxLength": 50,
            "example": "ООО \"Союз 2022\""
          },
          "fullname": {
            "description": "Полное имя",
            "type": "string",
            "maxLength": 100
          },
          "fio": {
            "description": "ФИО участника, разделитель \"пробел\"",
            "type": "string",
            "maxLength": 100
          },
          "birthdate": {
            "description": "Дата рождения",
            "type": "string",
            "format": "date-time"
          },
          "INN": {
            "description": "ИНН",
            "type": "string",
            "maxLength": 12,
            "example": 9731060844
          },
          "email": {
            "description": "email",
            "type": "string",
            "maxLength": 100,
            "example": "petrov@mypost.ru"
          },
          "VIP": {
            "description": "Тип VIP",
            "type": "string",
            "maxLength": 20,
            "example": "Gold"
          },
          "identity_doc": {
            "description": "ДУЛ строка",
            "type": "string",
            "maxLength": 60
          },
          "identity_doc_obj": {
            "description": "Объект с данными ДУЛ",
            "example": null
          }
        },
        "required": [
          "id_ecm_party",
          "type",
          "role",
          "INN",
          "shortname"
        ]
      },
      "ContractParties": {
        "description": "Объект «Участники договора»",
        "type": "object",
        "properties": {
          "type": {
            "description": "Тип участника",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestMemberTypes"
          },
          "role": {
            "description": "Роль участника",
            "type": "object",
            "items": {
              "$ref": "#/components/schemas/PerecoderRequestRoleTypes"
            }
          },
          "shortname": {
            "description": "Краткое имя",
            "type": "string",
            "maxLength": 50
          },
          "fullname": {
            "description": "Полное имя",
            "type": "string",
            "maxLength": 100
          },
          "birthdate": {
            "description": "Дата рождения",
            "type": "string",
            "format": "date-time"
          },
          "inn": {
            "description": "ИНН",
            "type": "string",
            "maxLength": 12
          },
          "vip": {
            "description": "Тип VIP",
            "type": "string",
            "maxLength": 20
          },
          "identity_doc_obj": {
            "$ref": "#/components/schemas/IdentityDoc"
          }
        },
        "required": [
          "type",
          "role",
          "shortname"
        ]
      },
      "Sender": {
        "description": "Отправитель. Заполняется для писем",
        "type": "object",
        "properties": {
          "id_ecm_sender": {
            "type": "string",
            "maxLength": 36
          },
          "id_as_sender": {
            "type": "string",
            "maxLength": 36
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "type": {
            "description": "Тип участника",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestMemberTypes"
          },
          "role": {
            "description": "Роль участника",
            "type": "object",
            "items": {
              "$ref": "#/components/schemas/PerecoderRequestRoleTypes"
            }
          },
          "shortname": {
            "description": "Краткое имя",
            "type": "string",
            "maxLength": 50
          },
          "fullname": {
            "description": "Полное имя",
            "type": "string",
            "maxLength": 100
          },
          "fio": {
            "type": "string",
            "maxLength": 100
          },
          "birthdate": {
            "type": "string",
            "format": "date-time"
          },
          "INN": {
            "description": "ИНН",
            "type": "string",
            "maxLength": 12
          },
          "VIP": {
            "description": "Признак VIP",
            "type": "string",
            "maxLength": 60
          },
          "identity_doc": {
            "description": "ДУЛ строкой",
            "type": "string",
            "maxLength": 512,
            "example": "Паспорт РФ, 2530 780350, выдан ГУ МВД г. Москва."
          },
          "id_ecm_identity_doc": {
            "$ref": "#/components/schemas/IdentityDoc"
          }
        }
      },
      "Recipient": {
        "description": "Объект «Получатель»",
        "type": "object",
        "properties": {
          "id_ecm_recipient": {
            "type": "string",
            "maxLength": 36,
            "example": "ac4c1e3c-0366-4e9d-a197-2c558b7c8fcb"
          },
          "id_as_recipient": {
            "type": "string",
            "maxLength": 36,
            "example": "2abfab53-003e-4b7a-81ec-7324a71a0661"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "type": {
            "description": "Тип участника",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestMemberTypes"
          },
          "role": {
            "description": "Роль участника",
            "type": "object",
            "items": {
              "$ref": "#/components/schemas/PerecoderRequestRoleTypes"
            }
          },
          "shortname": {
            "description": "Краткое имя",
            "type": "string",
            "maxLength": 50
          },
          "fullname": {
            "description": "Полное имя",
            "type": "string",
            "maxLength": 100
          },
          "fio": {
            "type": "string",
            "maxLength": 100
          },
          "birthdate": {
            "type": "string",
            "format": "date-time"
          },
          "INN": {
            "description": "ИНН",
            "type": "string",
            "maxLength": 12
          },
          "VIP": {
            "description": "Признак VIP",
            "type": "string",
            "maxLength": 60
          },
          "identity_doc": {
            "description": "ДУЛ строкой",
            "type": "string",
            "maxLength": 512
          },
          "id_ecm_identity_doc": {
            "$ref": "#/components/schemas/IdentityDoc"
          }
        }
      },
      "FileMetadata": {
        "description": "Объект «Метаданные файлов»",
        "type": "object",
        "properties": {
          "id_as_filemetadata": {
            "description": "ID метаданных файла",
            "type": "string",
            "maxLength": 36,
            "example": "908e61e7-8093-48f7-8969-ce9a800e405a"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "file_name": {
            "description": "Имя файла",
            "type": "string",
            "maxLength": 36,
            "example": "Справка о ДТП (748-154) №123 от 04.10.2022"
          },
          "file_type": {
            "description": "Тип в файла в АС",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestFileTypes"
          },
          "project": {
            "description": "Наименование пректа, испол. в АС Сфера",
            "type": "string",
            "maxLength": 256
          },
          "categories": {
            "description": "Категория файла / Использется в АС Сфера",
            "type": "string",
            "maxLength": 256
          },
          "create_date": {
            "description": "Дата создания",
            "type": "string",
            "format": "date-time"
          },
          "update_date": {
            "description": "Дата создания",
            "type": "string",
            "format": "date-time"
          },
          "version_number": {
            "description": "Номер версии",
            "type": "string",
            "maxLength": 10,
            "example": 1
          },
          "current_version": {
            "type": "boolean"
          },
          "medical_doc": {
            "description": "Медицинский документ",
            "type": "boolean"
          },
          "url_as": {
            "description": "URL ссылка AC",
            "type": "string",
            "maxLength": 256,
            "example": "/wp-content/uploads/42-789/1789-148"
          },
          "doc_size": {
            "type": "string",
            "maxLength": 30,
            "example": 2415724
          },
          "crc": {
            "description": "MD5-хеш файла в формате RFC 1864",
            "type": "string",
            "maxLength": 24
          },
          "esign": {
            "$ref": "#/components/schemas/RequestSignatures"
          }
        },
        "required": [
          "id_as_filemetadata",
          "app_id",
          "file_name",
          "create_date",
          "update_date",
          "url_as",
          "doc_size",
          "file_type"
        ]
      },
      "ResponseFileMetadata": {
        "description": "Объект «Метаданные файла» для response",
        "type": "object",
        "properties": {
          "id_ecm_filemetadata": {
            "description": "Внутренний идентификатор метаданных файла в ECM",
            "type": "string",
            "maxLength": 36,
            "example": "83eb145a-c7ba-4e54-9865-2912f857ca0a"
          },
          "id_as_filemetadata": {
            "description": "ID метаданных файла",
            "type": "string",
            "maxLength": 36,
            "example": "f538fa44-3c3f-4deb-8315-dd3f7891b289"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "file_name": {
            "description": "Имя файла",
            "type": "string",
            "maxLength": 36,
            "example": "Сведения о ДТП"
          },
          "file_type": {
            "description": "Тип в файла в АС",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderResponseFileTypes"
          },
          "categories": {
            "description": "Структурированная запись, разделитель \"/\"",
            "type": "string",
            "maxLength": 256,
            "example": "От клиента / Заявления"
          },
          "create_date": {
            "description": "Дата создания. UTC",
            "format": "date-time"
          },
          "update_date": {
            "description": "Дата создания. UTC",
            "format": "date-time"
          },
          "version_number": {
            "description": "Дата создания. UTC",
            "type": "string",
            "maxLength": 10,
            "example": 1
          },
          "current_version": {
            "description": "Текущая версия",
            "type": "boolean",
            "example": true
          },
          "medical_doc": {
            "description": "Медицинский документ",
            "type": "boolean",
            "example": false
          },
          "archive": {
            "description": "Флаг. true - файл в архивном хранилище, false - файл в оперативном хранилище",
            "type": "boolean",
            "example": false
          },
          "url_as": {
            "description": "URL ссылка AC",
            "type": "string",
            "maxLength": 256,
            "example": "/2023/02/18/bbd2864655f64e968fd7f941b66b96cd.pdf"
          },
          "url_file": {
            "description": "URL ссылка S3",
            "type": "string",
            "maxLength": 256,
            "example": "https://b.s3.sbercloud.ru/ecm-oper-test-gr/9dc4befc-fcdd-4945-94c6-f379a4aec543"
          },
          "url_preview": {
            "description": "Ссылка на превью файла",
            "type": "string",
            "maxLength": 256,
            "example": null
          },
          "token_file": {
            "description": "Токен временного доступа к файлу",
            "type": "string",
            "maxLength": 256,
            "example": "ldUIiwia2lkIiA6ICI4ZGY2M2IwZS02OGFmLTQxMjUtOGRjZS1jNjg1ZDZjMGY"
          },
          "token_preview": {
            "description": "Токен временного доступа к preview файла",
            "type": "string",
            "maxLength": 256,
            "example": null
          },
          "doc_size": {
            "description": "Размер файла в Кб",
            "type": "string",
            "maxLength": 30,
            "example": 12487896
          },
          "project": {
            "description": "Наименование пректа, испол. в АС Сфера",
            "type": "string",
            "maxLength": 256
          },
          "crc": {
            "description": "MD5-хеш файла в формате RFC 1864",
            "type": "string",
            "maxLength": 24
          },
          "upload_status": {
            "description": "стаус загрузки файла",
            "type": "string",
            "maxLength": 20,
            "example": "uploading"
          },
          "esign": {
            "$ref": "#/components/schemas/ResponseSignature"
          }
        },
        "required": [
          "id_ecm_filemetadata",
          "id_as_filemetadata",
          "app_id",
          "file_name",
          "create_date",
          "update_date",
          "url_as",
          "url_file",
          "url_preview",
          "doc_size",
          "file_type",
          "archive"
        ]
      },
      "DeleteFileMetadata": {
        "description": "Объект «Метаданные файла» на запрос удаления файла",
        "type": "object",
        "properties": {
          "id_ecm_filemetadata": {
            "type": "string",
            "maxLength": 36,
            "example": "b7b83697-7601-4c51-bdfd-a242e9ef43d1"
          },
          "id_as": {
            "type": "string",
            "maxLength": 36
          },
          "file_name": {
            "description": "Имя файла",
            "type": "string",
            "maxLength": 36
          },
          "file_type": {
            "description": "Тип в файла в АС",
            "type": "object",
            "$ref": "#/components/schemas/PerecoderRequestFileTypes"
          },
          "categories": {
            "description": "Структурированная запись, разделитель \"\\\". Например, \"общие\\ДУЛ\\паспорта\"",
            "type": "string",
            "maxLength": 256
          },
          "version_number": {
            "type": "string",
            "maxLength": 10
          }
        },
        "required": [
          "id_ecm_filemetadata"
        ]
      },
      "RequestSignatures": {
        "description": "Объект «Подписи»",
        "type": "object",
        "properties": {
          "id_ecm_sig": {
            "description": "Внутренний идентификатор ЭЦП в ECM",
            "type": "string",
            "maxLength": 36
          },
          "id_as_sig": {
            "description": "Внутренний идентификатор ЭЦП в АС",
            "type": "string",
            "maxLength": 36
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "signature_type": {
            "description": "тип подписи",
            "type": "string",
            "maxLength": 10
          },
          "name_sig": {
            "description": "наименование файла подписи",
            "type": "string",
            "maxLength": 100
          },
          "signatory_info": {
            "description": "информация о подписанте",
            "type": "string",
            "maxLength": 100
          },
          "datetime_sig": {
            "description": "дата-время подписи",
            "type": "string",
            "format": "date-time"
          },
          "hash": {
            "description": "хэш файла",
            "type": "string",
            "maxLength": 100
          },
          "url_as": {
            "description": "URL ссылка AC",
            "type": "string",
            "maxLength": 256,
            "example": "/2023/02/16/bbf9110f-5817-4a27-bfc2-77e343f6a45c.jpg"
          },
          "url_file": {
            "description": "URL ссылка s3",
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "ResponseSignature": {
        "description": "Объект «Подписи»",
        "type": "object",
        "properties": {
          "id_ecm_sig": {
            "description": "Внутренний идентификатор ЭЦП в ECM",
            "type": "string",
            "maxLength": 36
          },
          "id_as_sig": {
            "description": "Внутренний идентификатор ЭЦП в АС",
            "type": "string",
            "maxLength": 36
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "signature_type": {
            "description": "Тип подписи (ПЭП, ЭЦП) atFile - открепленная ЭП, inside - простая ЭП (ПЭП)",
            "type": "string",
            "maxLength": 10
          },
          "name_sig": {
            "description": "Наименование файла подписи (sig)",
            "type": "string",
            "maxLength": 256
          },
          "signatory_info": {
            "description": "Подробная информация о подписанте",
            "type": "string",
            "maxLength": 100
          },
          "datetime_sig": {
            "type": "string",
            "format": "date-time"
          },
          "hash": {
            "description": "хэш файла",
            "type": "string",
            "maxLength": 100
          },
          "url_as": {
            "description": "URL ссылка AC",
            "type": "string",
            "maxLength": 256
          },
          "url_file": {
            "description": "URL ссылка AC",
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "IdentityDoc": {
        "description": "Объект «Документ удостоверящий личность»",
        "type": "object",
        "properties": {
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "438f4b27-f530-4d40-852f-8936fd5c9a72"
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "a01aebbd-79fb-4085-a9f7-103351a409e1"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "code_identitydoc": {
            "description": "Код из классификатора приложения к приказу Приказ ФНС России от 14.11.2017 N ММВ-7-21/897",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "series": {
            "type": "string",
            "maxLength": 30,
            "example": 2570
          },
          "number": {
            "type": "string",
            "maxLength": 30,
            "example": 770352
          },
          "full_number": {
            "type": "string",
            "maxLength": 30
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "example": "10.02.2023"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "fio": {
            "type": "string",
            "maxLength": 100,
            "example": "Перов Сергей Юрьевич"
          },
          "issued": {
            "type": "string",
            "maxLength": 100,
            "example": "ГУ МВД по г. Москве"
          },
          "file_metadata": {
            "type": "array",
            "items": {
              "description": "Метаданные файлов",
              "$ref": "#/components/schemas/FileMetadata"
            }
          }
        },
        "required": [
          "code",
          "type_doc",
          "number",
          "issue_date",
          "file_metadata"
        ]
      },
      "CategoryName": {
        "description": "Имя категории",
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "maxLength": 100
          },
          "number_version": {
            "type": "string",
            "maxLength": 3
          },
          "primary_version": {
            "type": "string",
            "maxLength": 5
          },
          "link": {
            "type": "string",
            "maxLength": 1000
          }
        }
      },
      "ProductLine": {
        "description": "Линейка страховых продуктов",
        "type": "object",
        "properties": {
          "code_product_line": {
            "description": "Код линейки страховых продуктов",
            "type": "string",
            "maxLength": 40,
            "example": "MultiModuleProduct"
          },
          "product_line": {
            "description": "Наименование линейки страховых продуктов",
            "type": "string",
            "maxLength": 60,
            "example": "Модульный продукт"
          }
        }
      },
      "EmptyContent": {
        "description": "пустое тело property",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "ParentDoc": {
        "description": "Родительский документ",
        "type": "object",
        "properties": {
          "id_ecm_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "438f4b27-f530-4d40-852f-8936fd5c9a72"
          },
          "id_as_doc": {
            "type": "string",
            "maxLength": 36,
            "example": "a01aebbd-79fb-4085-a9f7-103351a409e1"
          },
          "app_id": {
            "description": "Идентификатор АС",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "date_doc": {
            "description": "Дата документа",
            "type": "string",
            "format": "date-time"
          },
          "series": {
            "type": "string",
            "maxLength": 30,
            "example": 2570
          },
          "number": {
            "type": "string",
            "maxLength": 30,
            "example": 770352
          },
          "doc_type": {
            "description": "Вид документа. либо doc_type или contract_type",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "contract_type": {
            "description": "Вид договора. При вызове метода NotificationUpload указывается либо doc_type или contract_type",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          }
        }
      },
      "JwtToken": {
        "description": "jwt токен с ФОС",
        "type": "object",
        "properties": {
          "access_token": {
            "description": "содержит header, payload, signature",
            "type": "string",
            "maxLength": 2000
          },
          "expires_in": {
            "description": "Время актуальности токена",
            "type": "integer"
          },
          "refresh_expires_in": {
            "description": "Время для возмоности обновления expires",
            "type": "integer"
          },
          "refresh_token": {
            "description": "Токен обновления времени expires",
            "type": "string",
            "maxLength": 99999
          },
          "token_type": {
            "description": "Тип токена. По умолчанию bearer-token",
            "type": "string",
            "maxLength": 10
          },
          "not-before-policy": {
            "description": "Not-before политика",
            "type": "string",
            "maxLength": 20
          },
          "session_state": {
            "description": "Идентификатор пользовательской сессии в keycloak",
            "type": "string",
            "maxLength": 40
          },
          "scope": {
            "description": "Идентификаторы, используемые для указания запрашиваемых прав доступа",
            "type": "string",
            "maxLength": 60
          }
        },
        "required": [
          "access_token",
          "expires_in"
        ]
      },
      "NotificationFile": {
        "description": "Информация о загружаемом файле",
        "type": "object",
        "properties": {
          "id_ecm_filemetadata": {
            "description": "Внутренний идентификатор метаданных файла в ECM",
            "type": "string",
            "maxLength": 36,
            "example": "78172bc2-4268-4930-a0ac-bccbfb8a4916"
          },
          "upload_status": {
            "description": "uploading - \"Загружается\", uploaded - \"Загружен\", not_uploaded - \"Не загружен\", error - \"Ошибка загрузки\"",
            "type": "string",
            "maxLength": 20,
            "example": "uploaded"
          }
        },
        "required": [
          "id_ecm_filemetadata",
          "upload_status"
        ]
      },
      "ResponseNotificationUpload400": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload400"
          }
        }
      },
      "ResponseNotificationUpload401": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload401"
          }
        }
      },
      "ResponseNotificationUpload403": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload403"
          }
        }
      },
      "ResponseNotificationUpload404": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload404"
          }
        }
      },
      "ResponseNotificationUpload405": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload405"
          }
        }
      },
      "ResponseNotificationUpload409": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload409"
          }
        }
      },
      "ResponseNotificationUpload415": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload415"
          }
        }
      },
      "ResponseNotificationUpload416": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload416"
          }
        }
      },
      "ResponseNotificationUpload423": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload423"
          }
        }
      },
      "ResponseNotificationUpload500": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload500"
          }
        }
      },
      "ResponseNotificationUpload501": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload501"
          }
        }
      },
      "ResponseNotificationUpload503": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload503"
          }
        }
      },
      "ResponseNotificationUpload504": {
        "description": "Сообщение об ошибке",
        "type": "object",
        "properties": {
          "properties": {
            "description": "свойства запроса",
            "$ref": "#/components/schemas/ResponsePropertiesNotificationUpload"
          },
          "header": {
            "description": "заголовок запроса",
            "$ref": "#/components/schemas/ReponseHeaderNotificationUpload400"
          },
          "payload": {
            "description": "payload ответного сообщения",
            "$ref": "#/components/schemas/ResponseContentNotificationUpload504"
          }
        }
      },
      "ResponsePropertiesNotificationUpload": {
        "description": "Метаданные запроса",
        "type": "object",
        "properties": {
          "routing_key": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "maxLength": 50,
            "example": "doc.sphere.v1.rs"
          },
          "delivery_mode": {
            "description": "Модель доставки сообщения.  «1» - не сохранятеся на диске, «2» - сохраняется",
            "type": "string",
            "maxLength": 1,
            "example": 1
          },
          "content-type": {
            "description": "стандартный MIME тип передаваемого контента",
            "type": "string",
            "default": "application/json",
            "maxLength": 250
          },
          "message_id": {
            "description": "ID интеграционного сообщения",
            "type": "string",
            "maxLength": 40,
            "example": "53f293d4-041f-4745-b098-d0e267c38860"
          },
          "correlation_id": {
            "description": "ID сообщения, на которое сформирован данный ответ",
            "type": "string",
            "maxLength": 40,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "reply_to": {
            "description": "Наименование очереди ответов, в которой ожидается ответ ",
            "type": "string",
            "maxLength": 40,
            "example": "doc.eadoc.v1.rq"
          },
          "app_id": {
            "description": "Код модуля системы (ИС), отправляющей сообщение",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "timestamp": {
            "description": "Дата и время генерации отправляемого сообщения в системе-отправителе",
            "type": "string",
            "maxLength": 22,
            "example": 1676643395497
          }
        },
        "required": [
          "routing_key",
          "delivery_mode",
          "content-type",
          "message_id",
          "correlation_id",
          "reply_to",
          "type",
          "app_id",
          "timestamp"
        ]
      },
      "ReponseHeaderNotificationUpload400": {
        "description": "Заголовок ответного сообщение",
        "type": "object",
        "properties": {
          "version_api": {
            "description": "Версия API ECM",
            "type": "string",
            "maxLength": 20,
            "example": "v1"
          },
          "method": {
            "type": "string",
            "maxLength": 20,
            "example": "NotificationUpload"
          }
        },
        "required": [
          "version_api",
          "method"
        ]
      },
      "ResponseContentNotificationUpload400": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 400
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Внутренняя ошибка ECM"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload401": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 401
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка авторизации в точках интеграции"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload403": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 403
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка проверки ролей доступа"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload404": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 404
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Запрашиваемый адрес не доступен"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload405": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 405
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Метод запроса не известен"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload409": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 409
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка проверки уникальности"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload415": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 415
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка проверки уникальности"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload416": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 416
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Отсутствует обязательное значение"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload423": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 423
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Документ заблокирован"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload500": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 500
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Внутренняя ошибка выполнения / Модуль интеграции"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload501": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 501
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка в ECM"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload503": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 501
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка подключения к S3"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "ResponseContentNotificationUpload504": {
        "description": "payload ответного сообщения",
        "type": "object",
        "properties": {
          "rquid": {
            "type": "string",
            "maxLength": 36,
            "example": "3f3ed266-7635-48ba-b570-ec75a80e8290"
          },
          "response_code": {
            "description": "Код ответа",
            "type": "string",
            "maxLength": 3,
            "example": 501
          },
          "response_message": {
            "description": "Описание ответа",
            "type": "string",
            "maxLength": 256,
            "example": "Ошибка подключения к ECM"
          }
        },
        "required": [
          "rquid",
          "response_code",
          "response_message"
        ]
      },
      "FileMetadataDelete": {
        "description": "Объект «Метаданные файлов»",
        "type": "object",
        "properties": {
          "id_ecm_filemetadata": {
            "description": "ID метаданных файла в ecm",
            "type": "string",
            "maxLength": 36,
            "example": "908e61e7-8093-48f7-8969-ce9a800e405a"
          },
          "id_as_filemetadata": {
            "description": "ID метаданных файла",
            "type": "string",
            "maxLength": 36,
            "example": "908e61e7-8093-48f7-8969-ce9a800e405a"
          }
        },
        "required": [
          "id_as_filemetadata",
          "id_ecm_filemetadata"
        ]
      },
      "LinkedDocuments": {
        "description": "Объект «Связанные документыв»",
        "type": "object",
        "properties": {
          "id_ecm_link": {
            "description": "ID связи",
            "type": "string",
            "maxLength": 36,
            "example": "908e61e7-8093-48f7-8969-ce9a800e405a"
          },
          "app_id": {
            "description": "Идентификатор АС - владелец связи",
            "type": "string",
            "maxLength": 36,
            "example": "3a5062ae-0b0d-4ed3-94d1-a98be7140bc3"
          },
          "doc_type": {
            "description": "Тип документа",
            "$ref": "#/components/schemas/PerecoderRequestDocTypes"
          },
          "doc_series": {
            "description": "Серия документа",
            "type": "string",
            "maxLength": 30,
            "example": 2030
          },
          "doc_number": {
            "description": "Номер документа",
            "type": "string",
            "maxLength": 30,
            "example": 780460
          },
          "doc_full_number": {
            "description": "Полный номер документа",
            "type": "string",
            "maxLength": 60
          },
          "doc_date": {
            "description": "Дата документа. UTC+3",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id_ecm_link",
          "doc_type",
          "doc_full_number",
          "doc_date"
        ]
      }
    }
  }
}
